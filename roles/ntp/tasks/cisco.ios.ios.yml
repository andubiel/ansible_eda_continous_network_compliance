# Check ntp servers' IP address before replacing
- name: Check/Replace existing NTP for compliance
  cisco.ios.ios_ntp_global:
    config: "{{ ntp_ios }}"
    state: replaced
  notify: NTP compliance violation
  register: ntp_diff

- ansible.builtin.debug:
    msg:
    - "current ntp config"
    - "{{ ntp_diff.before }}"
    - "replace commands (remediation)"
    - "{{ ntp_diff.commands | default ('no diff found') }}"
 
- name: Create SNOW ticket for {{ inventory_hostname }} {{ interface }}
  servicenow.itsm.incident:
    instance:
      host: "{{ SN_HOST }}"
      username: "{{ SN_USERNAME }}"
      password: "{{ SN_PASSWORD }}"
    state: new
    impact: high
    urgency: high
    description: "{{inventory_hostname}} configuration changed at {{ current_time }}######## The current {{ tag }} configuration ###### {{ config }} ##### was remediated for compliance"
    short_description: "{{inventory_hostname}} was out of compliance for {{ tag }}"
  register: snow_var
  delegate_to: localhost

- name: Resolve ticket
  servicenow.itsm.incident:
    instance:
      host: "{{ SN_HOST }}"
      username: "{{ SN_USERNAME }}"
      password: "{{ SN_PASSWORD }}"
    number: "{{ incident_num }}"
    state: resolved
    close_code: "Solved (Permanently)"
    close_notes: "Problem appears fixed! ##### Config Replaced: {{ ntp_diff }}"
    short_description: "{{inventory_hostname}} has been remdiated for {{ tag }}"
  delegate_to: localhost

- name: Close ticket
  servicenow.itsm.incident:
    instance:
      host: "{{ SN_HOST }}"
      username: "{{ SN_USERNAME }}"
      password: "{{ SN_PASSWORD }}"
    close_code: "Solved (Permanently)"
    close_notes: "The incident is closed"
    state: closed
    number: "{{ incident_num }}"
    short_description: "{{inventory_hostname}} is now compliant"
  delegate_to: localhost

- name: Show incident number
  ansible.builtin.debug:
    msg:
      - "{{ SN_HOST }}"
      - "{{ snow_var.record.number }}"


